@startuml

class User {
  + int : id
  + String : firstNames
  + String : lastName
}

class Patient extends User {
    + String : CPR
    + MedicalHistory : medicalHistory
    + getMedicalHistory(): MedicalHistory
}

class Staff extends User {
  + viewMedicalHistory(patient: Patient): MedicalHistory
}

class Doctor extends Staff {
  + List<Appointment> : appointments
}

class Appointment {
  + Doctor : doctor
  + Patient : patient
  + Date : date
}

class Prescription {
  + Patient : patient
  + Doctor : doctor
  + String : medication
  + Date : date
}

class MedicalHistory {
    + List<Appointment> : appointments
    + List<Prescription> : prescriptions
    + List<MedicalCondition> : medicalConditions
    + getAppointment(doctor: Doctor, date: Date): Appointment
    + getPrescription(doctor: Doctor, date: Date): Prescription
    + getMedicalCondition(condition: String): MedicalCondition
    + setAppointment(doctor: Doctor, date: Date): Appointment
    + setPrescription(doctor: Doctor, date: Date): Prescription
    + setMedicalCondition(condition: String): MedicalCondition
}

class MedicalCondition {
  + Patient : patient
  + String : condition
}

User --> Patient : is a
User --> Staff : is a
Staff --> Doctor : is a
Patient --> MedicalHistory : has
Staff --> Patient : accesses
MedicalHistory --> Appointment : has/sets
MedicalHistory --> Prescription : has/sets
MedicalHistory --> MedicalCondition : has/sets

@enduml
